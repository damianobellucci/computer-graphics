Cosa ho fatto fino ad ora:
-proiettile con moto parabolico
-proiettile che non segue la navicella
-ricarica proiettile quando esce dalla scena
-possibilità di sparare i proiettili a destra e sinistra
-ottimizzazione del calcolo dei virus colpiti
-randomizzazione cammino avversari all'interno della SCENA
-avversari che restano all'interno della viewport
-finchè proiettile è in volo non si può sparare
-nuova logica per avversario colpito
-nuova logica per avversario che scompare quando colpito
-scelta da terminale numero di avversari (da ottimizzare con checkSanity)
-proiettile scompare una volta che colpisce un avversario, invece di continuare a viaggiare
-blocco e chiusura finistra quando giocatore viene preso da un avversario oppure giocatore vince
-delay tra quando giocatore perde/vince e chiusura finistra (per evitare effetto troppo veloce di chiusura finestra)
-variare angolo dello sparo dinamicamente tramite tasti
-risolto problema che quando si colpiva l'ultimo nemico non si vedeva il proiettile su di esso
-cambiati gli avversari, ora sono quadrati
-aggiornati i colori con sfumature degli avversari
-aggiustato il bound di colpimento avversario analogamente alla nuova geometria dell'avversario
-aggiornato bound di rimbalzo avversari nella scena
-parametrizzazione dimensione giocatore
-parametrizzazione della posizione del proiettile in base alla parametrizzazione del giocatore
-palla al posto di proiettile puntiforme
-corretto posizionamento della palla tramite le trasformazioni
-aggiustamento bound colpimento avversari in base alle nuove geometrie
-rifatti i bound per il caso in cui il giocatore è colpito
-rifatto il rimbalzo contro il muro di destra secondo la nuova geometria del giocatore
-implementato particle system in cui l'avversario quando viene colpito si lascia dietro una scia che si espande a raggiera secondo moto rettilineo uniformemente accelerato (ogni 
punto del particle system si muove con moto uniformemente accelerato, si differenziano l'uno dall'altro per uno scarto di accelerazione calcolato randomicamente per aggiungere
caoticità al particle system)
inoltre le direzioni di espansione della raggiera di punti sono coerenti con la direzione di arrivo del proiettile
-tolto lampeggiamento avversari
-da aggiornare bound colpimento giocatore da avversario: DA FARE UNA VOLTA DEFINITA LA NUOVA GEMETRIA DELL'AVVERSARIO
-reso indipendente dal codice l'esecuzione del particle system

-------------------------------------------------------------
Cose da fare:
-colori degli avversari devono essere diversi l'uno dall'altro con casualità red green blue: non è possibile in quanto la funzione disegna nemico
viene richiamata nella init una volta sola per settare la configurazione degli avversari, quindi ogni avversario avrà colore uguale perché
sono tutti fatti dallo stesso stampo, quello che si può fare al massimo è variare il colore in base al "tempo" che passa


-----
Corrente:
